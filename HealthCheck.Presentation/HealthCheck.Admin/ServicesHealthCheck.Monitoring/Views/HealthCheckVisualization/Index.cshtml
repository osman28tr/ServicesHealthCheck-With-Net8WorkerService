@{
    Layout="_HealthCheckLayout";
}
<!DOCTYPE html>
<html>
<head>
    <title>Resource Usage Chart</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>

        // SignalR hub'a bağlan
        var connection = new signalR.HubConnectionBuilder().withUrl("http://localhost:5181/healthcheckhub").build();
        var existingCharts = {};
        // Veri geldiğinde grafikleri güncelle
        connection.on("receiveVisualizationMessage", function (serviceDatas) {
            console.log(serviceDatas);
            updateCharts(serviceDatas);
        });

        // Hub'a bağlan
        connection.start().then(function () {
            console.log("SignalR connection established.");
        }).catch(function (err) {
            return console.error(err.toString());
        });

        function updateCharts(serviceDatas) {

            // Her servis için ayrı bir canvas ve grafik oluştur
            var canvasId = serviceDatas.serviceName.replace(/[^a-zA-Z0-9]/g, ''); // Servis adını canvas id'si olarak kullan, özel karakterlerden arındır

            // Servis adına göre mevcut çizgi grafiğini kontrol et
            if (existingCharts.hasOwnProperty(canvasId)) {
                // Mevcut bir çizgi grafiği varsa, verileri güncelle
                var chart = existingCharts[canvasId];
                chart.data.datasets[0].data = [serviceDatas.cpuUsage, serviceDatas.physicalMemoryUsage, serviceDatas.virtualMemoryUsage, serviceDatas.privateMemoryUsage];
                chart.update();
            } else {
                // Yeni bir çizgi grafiği oluştur
                var canvasElement = document.createElement('canvas');
                canvasElement.id = canvasId;

                var chartItem = document.createElement('div');
                chartItem.classList.add('chart-item');
                chartItem.appendChild(canvasElement);
                document.querySelector('.chart-container').appendChild(chartItem);

                var data = {
                    labels: ["CPU", "Physical Memory", "Virtual Memory", "Private Memory"],
                    datasets: [{
                        label: serviceDatas.serviceName + ' (MB)',
                        data: [serviceDatas.cpuUsage, serviceDatas.physicalMemoryUsage, serviceDatas.virtualMemoryUsage, serviceDatas.privateMemoryUsage],
                        borderColor: 'rgb(75, 192, 192)',
                        tension: 0.1
                    }]
                };

                var ctx = canvasElement.getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'line',
                    data: data,
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });

                // Yeni çizgi grafiğini mevcut çizgi grafikleri listesine ekle
                existingCharts[canvasId] = myChart;
            }
        }
    </script>

    <style>
        .chart-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, 400px); /* Her sütun en az 400 piksel genişliğinde olacak */
            gap: 20px; /* Grafikler arasında boşluk */
           
        }

        .chart-item {
            border: 1px solid #ccc;
            padding: 10px;
            /* width: 400px;
            height: 250px;
            float:left; */
        }

        canvas {
            width: 100% !important; /* Canvas genişliği 100% olacak */
            height: auto !important; /* Canvas yüksekliği otomatik olacak */
        }
    </style>
</head>
<body>
    <br />
    <div class="container-fluid" style="left:10px; position:inherit;">
        <img src="~/icons/live-streaming.png" width="120px" height="60px" />
    </div>
    <br />
    <div class="chart-container">
        <!-- Grafiklerin yerleştirileceği grid container -->
        <!-- Diğer çizgi grafiklerini buraya ekleyebilirsiniz -->
    </div>
</body>
</html>
