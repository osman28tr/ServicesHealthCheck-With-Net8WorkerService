@{
    Layout = null;
}
@model List<GetListServiceHealthCheckResult>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <title>Index</title>
</head>
<body>
    <div class="container-fluid" style="display:flex">
        <h3 style="margin-top:12px">Health Check Status</h3>
        <img src="~/icons/status.png" width="120px" height="60px" />
    </div>
    <br />
    <table class="table">
        <thead style="background-color:green; color:white">
            <tr>
                <th scope="col"></th>
                <th scope="col">Name</th>
                <th scope="col">Health</th>
                <th scope="col">Cpu Usage</th>
                <th scope="col">Physical Memory Usage</th>
                <th scope="col">Private Memory Usage</th>
                <th scope="col">Virtual Memory Usage</th>
                @*    <th scope="col">Description</th>
                <th scope="col">On state from</th>
                <th scope="col">Last execution</th> *@
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <th scope="row">-</th>
                    <td>@item.ServiceName</td>
                    <td>@item.Status</td>
                    <td>@item.CpuUsage</td>
                    @{
                        var memoryUsageParts = item.PhysicalMemoryUsage.Split(',');
                        if (memoryUsageParts.Length == 2) {
                            var formattedMemoryUsage = memoryUsageParts[0] + "," + memoryUsageParts[1].Substring(0, 2);
                            <td>@formattedMemoryUsage MB</td>
                        } else {
                            <td>@item.PhysicalMemoryUsage</td>
                        }

                        var memoryUsageParts2 = item.PrivateMemoryUsage.Split(',');
                        if (memoryUsageParts2.Length == 2)
                        {
                            var formattedMemoryUsage = memoryUsageParts2[0] + "," + memoryUsageParts2[1].Substring(0, 2);
                            <td>@formattedMemoryUsage MB</td>
                        }
                        else
                        {
                            <td>@item.PrivateMemoryUsage</td>
                        }

                        var memoryUsageParts3 = item.VirtualMemoryUsage.Split(',');
                        if (memoryUsageParts3.Length == 2)
                        {
                            var formattedMemoryUsage = memoryUsageParts3[0] + "," + memoryUsageParts3[1].Substring(0, 2);
                            <td>@formattedMemoryUsage MB</td>
                        }
                        else
                        {
                            <td>@item.VirtualMemoryUsage</td>
                        }
                    }
                </tr>
            })
        </tbody>
    </table>

</body>
</html>